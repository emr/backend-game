# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    api_doc_path_yml: '%kernel.project_dir%/api_specification.yaml'
    api_doc_path_html: '%kernel.project_dir%/swagger.html'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Http/Schema'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Http\Controller\:
        resource: '../src/Http/Controller/'
        tags: ['controller.service_arguments']

    Redis:
        class: Redis
        calls:
            - [connect, ['%env(REDIS_HOST)%', '%env(REDIS_PORT)%']]
            - [select, ['%env(REDIS_DB)%']]

    App\User\Storage\UserStorage: '@App\User\Storage\RedisUserStorage'
    App\User\Storage\SessionStorage: '@App\User\Storage\RedisSessionStorage'
    App\Rank\Storage\RankStorage: '@App\Rank\Storage\RedisRankStorage'

    App\Rank\Leaderboard:
        bind:
            int $size: '%env(LEADERBOARD_SIZE)%'
