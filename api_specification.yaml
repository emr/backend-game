openapi: 3.0.1
info:
    title: Backend Game
    description: This is the implementation of "Backend Game Project".
    contact:
        email: emre@emreakinci.com.tr
    version: 1.0.0
servers:
    - url: /api/v1/
tags:
    - name: user
    - name: game
    - name: leaderboard
paths:
    /user/signup:
        post:
            tags:
                - user
            summary: Signs up a new user
            operationId: signup
            requestBody:
                description: Credentials
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateUser"
            responses:
                201:
                    description: User was successfully created
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SignUpResponse'
                400:
                    description: Validation error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiErrorResponse'
                            examples:
                                Empty username:
                                    value:
                                        code: 400
                                        message: Username should not be empty
                                Duplicate username:
                                    value:
                                        code: 400
                                        message: Username "user87934" is already in use
    /user/signin:
        post:
            tags:
                - user
            summary: Signs in the user for the game
            operationId: signin
            requestBody:
                description: Credentials
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateUser"
            responses:
                200:
                    description: User was successfully signed in to the game
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SignInResponse'
                400:
                    description: Validation error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiErrorResponse'
                            example:
                                code: 400
                                message: "Username should not be empty"
                401:
                    description: Bad credentials
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiErrorResponse'
                            example:
                                code: 401
                                message: "Bad credentials"
    /endgame:
        post:
            tags:
                - game
            summary: Ends the game between players
            description: |
                Ends the game between players and saves the scores.

                Accepts only logged in user ids. Deletes provided users' sessions.

                A player only can have one score. Sending multiple scores for a user causes bad request.
            operationId: endgame
            requestBody:
                description: Scores with player ids
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/EndGameRequest"
            responses:
                200:
                    description: Scores were successfully saved and users were logged out
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EndGameResponse'
                400:
                    description: Validation error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiErrorResponse'
                            examples:
                                Invalid player id:
                                    value:
                                        code: 400
                                        message: Invalid player id "0"
                                Player has multiple scores:
                                    value:
                                        code: 400
                                        message: Player with id "23" has multiple scores
                                Player has not logged in:
                                    value:
                                        code: 400
                                        message: Player with id "23" has not logged
    /leaderboard:
        get:
            tags:
                - leaderboard
            summary: Returns the leaderboard table
            operationId: leaderboard
            parameters:
                - in: query
                  name: page
                  schema:
                      type: integer
                      default: 1
                - in: query
                  name: limit
                  schema:
                      type: integer
                      default: 10
            responses:
                200:
                    description: Successful
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LeaderboardResponse'
components:
    schemas:
        CreateUser:
            required:
                - password
                - username
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
            example:
                username: user87934
                password: user123
        User:
            type: object
            properties:
                id:
                    type: integer
                username:
                    type: string
            example:
                id: 23
                username: user87934
        UserRegistrationData:
            type: object
            properties:
                id:
                    type: integer
                username:
                    type: string
                password:
                    type: string
            example:
                id: 22
                username: user87934
                password: user123
        PlayerScore:
            type: object
            properties:
                id:
                    type: integer
                score:
                    type: number
            example:
                id: 22
                score: 372
        EndGameRequest:
            type: object
            properties:
                scores:
                    type: array
                    items:
                        $ref: '#/components/schemas/PlayerScore'
            example:
                scores:
                    - id: 3
                      score: 40
                    - id: 9
                      score: 13.82
        ApiSuccessResponse:
            type: object
            properties:
                status:
                    type: string
                    enum: [success]
                timestamp:
                    type: string
                    format: date-time
                result:
                    type: object
        ApiErrorResponse:
            type: object
            properties:
                code:
                    type: integer
                message:
                    type: string
            example:
                code: 418
                message: I'm a teapot
        SignUpResponse:
            allOf:
                - $ref: '#/components/schemas/ApiSuccessResponse'
                - type: object
                  properties:
                      result:
                          $ref: '#/components/schemas/UserRegistrationData'
        SignInResponse:
            allOf:
                - $ref: '#/components/schemas/ApiSuccessResponse'
                - type: object
                  properties:
                      result:
                          $ref: '#/components/schemas/User'
        EndGameResponse:
            allOf:
                - $ref: '#/components/schemas/ApiSuccessResponse'
                - type: object
                  properties:
                      result:
                          type: array
                          items:
                              $ref: '#/components/schemas/PlayerScore'
        PaginationMeta:
            type: object
            properties:
                itemCount:
                    type: integer
                totalItems:
                    type: integer
                totalPage:
                    type: integer
                currentPage:
                    type: integer
            example:
                itemCount: 12
                totalItems: 993
                totalPage: 83
                currentPage: 2
        PlayerRank:
            type: object
            properties:
                id:
                    type: integer
                username:
                    type: string
                rank:
                    type: number
            example:
                id: 22
                username: user87934
                rank: 489.902
        LeaderboardResponse:
            allOf:
                - $ref: '#/components/schemas/ApiSuccessResponse'
                - type: object
                  properties:
                      result:
                          type: object
                          properties:
                              list:
                                  type: array
                                  items:
                                      $ref: '#/components/schemas/PlayerRank'
                              meta:
                                  $ref: '#/components/schemas/PaginationMeta'
